# model_name='claude-3-7-sonnet-20250219', reasoning_budget=32000, tries=0, n=12, i=3
# valid_prefix_length=15, is_valid_solution=0, first_correction=-1

<think>
This is the famous Tower of Hanoi puzzle. I need to move 12 disks from peg 0 to peg 2 following the rules.

For the Tower of Hanoi with $n$ disks, the minimum number of moves required is $2^n - 1$. With 12 disks, we need $2^{12} - 1 = 4096 - 1 = 4095$ moves. This is a lot, but I'll implement the recursive algorithm to generate all the moves.

The recursive algorithm for Tower of Hanoi is:
1. Move $n-1$ disks from source to auxiliary peg
2. Move the largest disk from source to destination peg
3. Move $n-1$ disks from auxiliary to destination peg

Let me implement this to generate all the moves:

```
function hanoi(n, source, auxiliary, destination, moves) {
    if (n === 1) {
        moves.push([1, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}
```

Now, let's generate all the moves for 12 disks:

For n=1 (disk 1, the smallest):
- Move disk 1 from peg 0 to peg 2: `[1, 0, 2]`

For n=2:
- Move disk 1 from peg 0 to peg 1: `[1, 0, 1]`
- Move disk 2 from peg 0 to peg 2: `[2, 0, 2]`
- Move disk 1 from peg 1 to peg 2: `[1, 1, 2]`

For n=3:
- Move disk 1 from peg 0 to peg 2: `[1, 0, 2]`
- Move disk 2 from peg 0 to peg 1: `[2, 0, 1]`
- Move disk 1 from peg 2 to peg 1: `[1, 2, 1]`
- Move disk 3 from peg 0 to peg 2: `[3, 0, 2]`
- Move disk 1 from peg 1 to peg 0: `[1, 1, 0]`
- Move disk 2 from peg 1 to peg 2: `[2, 1, 2]`
- Move disk 1 from peg 0 to peg 2: `[1, 0, 2]`

That's starting to get complex. Instead of doing it manually, let me write a function to generate the moves programmatically:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function hanoi(n, source, auxiliary, destination) {
        if (n === 0) return;
        
        hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        hanoi(n-1, auxiliary, source, destination);
    }
    
    hanoi(n, source, auxiliary, destination);
    return moves;
}
```

Let me use this function to generate the moves for n=3 first to verify:

For n=3:
- Hanoi(2, 0, 2, 1):
  - Hanoi(1, 0, 1, 2): Move disk 1 from 0 to 2
  - Move disk 2 from 0 to 1
  - Hanoi(1, 2, 0, 1): Move disk 1 from 2 to 1
- Move disk 3 from 0 to 2
- Hanoi(2, 1, 0, 2):
  - Hanoi(1, 1, 2, 0): Move disk 1 from 1 to 0
  - Move disk 2 from 1 to 2
  - Hanoi(1, 0, 1, 2): Move disk 1 from 0 to 2

Hmm, that's not matching what I had before. Let me re-trace the manual steps:

For n=3:
- First, move n-1=2 disks from source to auxiliary (from 0 to 1):
  - Move disk 1 from peg 0 to peg 2: `[1, 0, 2]`
  - Move disk 2 from peg 0 to peg 1: `[2, 0, 1]`
  - Move disk 1 from peg 2 to peg 1: `[1, 2, 1]`
- Move the largest disk (disk 3) from source to destination: `[3, 0, 2]`
- Move n-1=2 disks from auxiliary to destination (from 1 to 2):
  - Move disk 1 from peg 1 to peg 0: `[1, 1, 0]`
  - Move disk 2 from peg 1 to peg 2: `[2, 1, 2]`
  - Move disk 1 from peg 0 to peg 2: `[1, 0, 2]`

Ok, that's consistent. Let me fix the code:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function hanoi(n, source, auxiliary, destination) {
        if (n === 0) return;
        
        hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        hanoi(n-1, auxiliary, source, destination);
    }
    
    hanoi(n, source, auxiliary, destination);
    return moves;
}
```

Actually, let's test this on n=3:
- hanoi(3, 0, 1, 2):
  - hanoi(2, 0, 2, 1):
    - hanoi(1, 0, 1, 2):
      - hanoi(0, 0, 2, 1): return
      - moves.push([1, 0, 2])
      - hanoi(0, 1, 0, 2): return
    - moves.push([2, 0, 1])
    - hanoi(1, 2, 0, 1):
      - hanoi(0, 2, 1, 0): return
      - moves.push([1, 2, 1])
      - hanoi(0, 0, 2, 1): return
  - moves.push([3, 0, 2])
  - hanoi(2, 1, 0, 2):
    - hanoi(1, 1, 2, 0):
      - hanoi(0, 1, 0, 2): return
      - moves.push([1, 1, 0])
      - hanoi(0, 2, 1, 0): return
    - moves.push([2, 1, 2])
    - hanoi(1, 0, 1, 2):
      - hanoi(0, 0, 2, 1): return
      - moves.push([1, 0, 2])
      - hanoi(0, 1, 0, 2): return

This gives:
1. [1, 0, 2]
2. [2, 0, 1]
3. [1, 2, 1]
4. [3, 0, 2]
5. [1, 1, 0]
6. [2, 1, 2]
7. [1, 0, 2]

This matches my manual calculation. But I'm a bit concerned about the accuracy of my recursive hanoi function. Let me try a slightly different approach to implement the recursive algorithm:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function hanoi(n, source, auxiliary, destination) {
        if (n === 1) {
            moves.push([n, source, destination]);
            return;
        }
        
        hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        hanoi(n-1, auxiliary, source, destination);
    }
    
    hanoi(n, source, auxiliary, destination);
    return moves;
}
```

Actually, the issue is with my recursive function. I'm not correctly handling the recursive case. Let's trace it again with the correct function:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function hanoi(n, source, auxiliary, destination) {
        if (n === 1) {
            moves.push([n, source, destination]);
            return;
        }
        
        hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        hanoi(n-1, auxiliary, source, destination);
    }
    
    hanoi(n, source, auxiliary, destination);
    return moves;
}
```

For n=3:
- hanoi(3, 0, 1, 2):
  - n > 1, so call hanoi(2, 0, 2, 1)
    - n > 1, so call hanoi(1, 0, 1, 2)
      - n = 1, so add [1, 0, 2] to moves
    - add [2, 0, 1] to moves
    - call hanoi(1, 2, 0, 1)
      - n = 1, so add [1, 2, 1] to moves
  - add [3, 0, 2] to moves
  - call hanoi(2, 1, 0, 2)
    - n > 1, so call hanoi(1, 1, 2, 0)
      - n = 1, so add [1, 1, 0] to moves
    - add [2, 1, 2] to moves
    - call hanoi(1, 0, 1, 2)
      - n = 1, so add [1, 0, 2] to moves

This gives:
1. [1, 0, 2]
2. [2, 0, 1]
3. [1, 2, 1]
4. [3, 0, 2]
5. [1, 1, 0]
6. [2, 1, 2]
7. [1, 0, 2]

This matches my manual calculation as expected. I'm now confident that my recursive function is correct. Let's use it to generate all the moves for n=12:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function hanoi(n, source, auxiliary, destination) {
        if (n === 1) {
            moves.push([n, source, destination]);
            return;
        }
        
        hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        hanoi(n-1, auxiliary, source, destination);
    }
    
    hanoi(n, source, auxiliary, destination);
    return moves;
}

const moves = generateHanoiMoves(12);
```

Let me implement this more directly:

function hanoi(n, source, auxiliary, destination, moves) {
    if (n === 1) {
        moves.push([1, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}

const moves = [];
hanoi(12, 0, 1, 2, moves);

Alright, let's manually trace a few moves for n=12 to make sure everything is correct:

1. First, we move 11 disks from peg 0 to peg 1 (using peg 2 as auxiliary)
2. Then, we move disk 12 from peg 0 to peg 2
3. Finally, we move 11 disks from peg 1 to peg 2 (using peg 0 as auxiliary)

For the first step, we:
1. Move 10 disks from peg 0 to peg 2 (using peg 1 as auxiliary)
2. Move disk 11 from peg 0 to peg 1
3. Move 10 disks from peg 2 to peg 1 (using peg 0 as auxiliary)

For the third step, we:
1. Move 10 disks from peg 1 to peg 0 (using peg 2 as auxiliary)
2. Move disk 11 from peg 1 to peg 2
3. Move 10 disks from peg 0 to peg 2 (using peg 1 as auxiliary)

This quickly gets complex, so instead of tracing it manually, I'll implement the algorithm and generate all the moves. Since we have 12 disks, we'll need 2^12 - 1 = 4095 moves. Let's generate all of them.

Actually, let me implement the algorithm in JavaScript, and then manually translate the results to the format needed:

```javascript
function hanoi(n, source, auxiliary, destination) {
    const moves = [];
    
    function _hanoi(n, source, auxiliary, destination) {
        if (n === 1) {
            moves.push([1, source, destination]);
            return;
        }
        
        _hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        _hanoi(n-1, auxiliary, source, destination);
    }
    
    _hanoi(n, source, auxiliary, destination);
    return moves;
}

const moves = hanoi(12, 0, 1, 2);
console.log(moves);
```

Wait, it's probably easier to just implement the algorithm directly in this response. Let me generate the list of moves for the Tower of Hanoi with 12 disks:

```
function hanoi(n, source, auxiliary, destination, moves = []) {
    if (n === 1) {
        moves.push([1, source, destination]);
        return moves;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
    
    return moves;
}

const moves = hanoi(12, 0, 1, 2);
```

Alright, so for n=12, there are 2^12 - 1 = 4095 moves. Let me generate them:

I'll start by writing a Python-like pseudocode to generate the moves:

```
def hanoi(n, source, auxiliary, destination):
    if n == 1:
        return [[1, source, destination]]
    
    moves = []
    moves.extend(hanoi(n-1, source, destination, auxiliary))
    moves.append([n, source, destination])
    moves.extend(hanoi(n-1, auxiliary, source, destination))
    
    return moves

moves = hanoi(12, 0, 1, 2)
```

Alright, let's directly list the moves for n=12:

The total number of moves is 2^12 - 1 = 4095.

Let me start listing them:

1. [1, 0, 2]
2. [2, 0, 1]
3. [1, 2, 1]
4. [3, 0, 2]
5. [1, 1, 0]
6. [2, 1, 2]
7. [1, 0, 2]
8. [4, 0, 1]
9. [1, 2, 1]
10. [2, 2, 0]
11. [1, 1, 0]
12. [3, 2, 1]
13. [1, 0, 2]
14. [2, 0, 1]
15. [1, 2, 1]
16. [5, 0, 2]
17. [1, 1, 0]
18. [2, 1, 2]
19. [1, 0, 2]
20. [3, 1, 0]
21. [1, 2, 1]
22. [2, 2, 0]
23. [1, 1, 0]
24. [4, 1, 2]
25. [1, 0, 2]
26. [2, 0, 1]
27. [1, 2, 1]
28. [3, 0, 2]
29. [1, 1, 0]
30. [2, 1, 2]
31. [1, 0, 2]

Alright, instead of generating the moves manually, let me provide a recursive function to generate them and then output the list directly.

Actually, let me use the following approach to generate the moves for Tower of Hanoi with 12 disks:

```
function generateHanoiMoves(n, source = 0, auxiliary = 1, destination = 2) {
    const moves = [];
    
    function _hanoi(n, source, auxiliary, destination) {
        if (n === 1) {
            moves.push([1, source, destination]);
            return;
        }
        
        _hanoi(n-1, source, destination, auxiliary);
        moves.push([n, source, destination]);
        _hanoi(n-1, auxiliary, source, destination);
    }
    
    _hanoi(n, source, auxiliary, destination);
    return moves;
}

const moves = generateHanoiMoves(12);
```

Let's trace the first few moves of this algorithm:
1. hanoi(12, 0, 1, 2)
   - hanoi(11, 0, 2, 1)
     - hanoi(10, 0, 1, 2)
       - ... (recursion continues)
       - Finally, we reach hanoi(1, 0, 2, 1)
         - Push [1, 0, 1] to moves
       - Push [2, 0, 2] to moves
       - hanoi(1, 1, 0, 2)
         - Push [1, 1, 2] to moves
       - ... (recursion continues)
     - Push [11, 0, 1] to moves
     - hanoi(10, 2, 0, 1)
       - ... (recursion continues)
   - Push [12, 0, 2] to moves
   - hanoi(11, 1, 0, 2)
     - ... (recursion continues)

This is extremely recursive and would take a lot of space to manually trace. But the algorithm is correct, and it will generate all 4095 moves for the Tower of Hanoi with 12 disks.

Let me start generating the full list:

Move disk 1 from peg 0 to peg 1: [1, 0, 1]
Move disk 2 from peg 0 to peg 2: [2, 0, 2]
Move disk 1 from peg 1 to peg 2: [1, 1, 2]
Move disk 3 from peg 0 to peg 1: [3, 0, 1]
Move disk 1 from peg 2 to peg 0: [1, 2, 0]
Move disk 2 from peg 2 to peg 1: [2, 2, 1]
Move disk 1 from peg 0 to peg 1: [1, 0, 1]
Move disk 4 from peg 0 to peg 2: [4, 0, 2]
Move disk 1 from peg 1 to peg 2: [1, 1, 2]
Move disk 2 from peg 1 to peg 0: [2, 1, 0]
Move disk 1 from peg 2 to peg 0: [1, 2, 0]
Move disk 3 from peg 1 to peg 2: [3, 1, 2]
Move disk 1 from peg 0 to peg 1: [1, 0, 1]
Move disk 2 from peg 0 to peg 2: [2, 0, 2]
Move disk 1 from peg 1 to peg 2: [1, 1, 2]
Move disk 5 from peg 0 to peg 1: [5, 0, 1]
Move disk 1 from peg 2 to peg 0: [1, 2, 0]
Move disk 2 from peg 2 to peg 1: [2, 2, 1]
Move disk 1 from peg 0 to peg 1: [1, 0, 1]
Move disk 3 from peg 2 to peg 0: [3, 2, 0]
Move disk 1 from peg 1 to peg 2: [1, 1, 2]
Move disk 2 from peg 1 to peg 0: [2, 1, 0]
Move disk 1 from peg 2 to peg 0: [1, 2, 0]
Move disk 4 from peg 2 to peg 1: [4, 2, 1]
Move disk 1 from peg 0 to peg 1: [1, 0, 1]
Move disk 2 from peg 0 to peg 2: [2, 0, 2]
Move disk 1 from peg 1 to peg 2: [1, 1, 2]
Move disk 3 from peg 0 to peg 1: [3, 0, 1]
Move disk 1 from peg 2 to peg 0: [1, 2, 0]
Move disk 2 from peg 2 to peg 1: [2, 2, 1]
Move disk 1 from peg 0 to peg 1: [1, 0, 1]

This still takes too long to list out by hand, and I've only covered a small portion of the 4095 moves. Instead, let me directly generate the list of moves using the algorithm and present it in the requested format.

Actually, it looks like the request is for the full sequence of 4095 moves for the Tower of Hanoi with 12 disks. Let me break it down:

1. We have 12 disks labeled 1 (smallest) to 12 (largest)
2. Initial configuration: All disks on peg 0, with the largest at the bottom and the smallest at the top
3. Goal configuration: All disks on peg 2, with the largest at the bottom and the smallest at the top
4. We need to output the complete list of moves in the format: [[disk_id, from_peg, to_peg], ...]

The algorithm to solve the Tower of Hanoi is well-known, and as I've described, it's recursive. To move n disks from a source peg to a destination peg:
1. Move n-1 disks from the source peg to the auxiliary peg
2. Move the nth disk from the source peg to the destination peg
3. Move n-1 disks from the auxiliary peg to the destination peg

For 12 disks, this means 2^12 - 1 = 4095 moves. 

Let me trace the algorithm to generate the moves:

```
function hanoi(n, source, auxiliary, destination, moves = []) {
    if (n === 1) {
        moves.push([1, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}

let moves = [];
hanoi(12, 0, 1, 2, moves);
console.log(moves);
```

Let's simulate this algorithm to generate the first few moves:

1. hanoi(12, 0, 1, 2, moves):
   - hanoi(11, 0, 2, 1, moves):
     - hanoi(10, 0, 1, 2, moves):
       - hanoi(9, 0, 2, 1, moves):
         - ... (recursion continues)
         - Eventually, we reach hanoi(1, 0, 1, 2, moves):
           - Push [1, 0, 2] to moves (Move disk 1 from peg 0 to peg 2)
         - Push [2, 0, 1] to moves (Move disk 2 from peg 0 to peg 1)
         - hanoi(1, 2, 0, 1, moves):
           - Push [1, 2, 1] to moves (Move disk 1 from peg 2 to peg 1)
         - ... (recursion continues)
       - Push [9, 0, 1] to moves (Move disk 9 from peg 0 to peg 1)
       - ... (recursion continues)
     - Push [10, 0, 2] to moves (Move disk 10 from peg 0 to peg 2)
     - ... (recursion continues)
   - Push [11, 0, 1] to moves (Move disk 11 from peg 0 to peg 1)
   - ... (recursion continues)
 - Push [12, 0, 2] to moves (Move disk 12 from peg 0 to peg 2)
 - ... (recursion continues)

The number of moves is 2^12 - 1 = 4095, which is quite a lot. But since I need to provide the complete list of moves, I'll first verify that the algorithm is correct by checking the first few moves:

First, we need to move 11 disks from peg 0 to peg 1, using peg 2 as the auxiliary. The first few moves should be:
1. Move disk 1 from peg 0 to peg 2
2. Move disk 2 from peg 0 to peg 1
3. Move disk 1 from peg 2 to peg 1
4. Move disk 3 from peg 0 to peg 2
... and so on.

Actually, I think I might be making a mistake in the algorithm. Let's double-check the base case:

```
function hanoi(n, source, auxiliary, destination, moves = []) {
    if (n === 1) {
        moves.push([1, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}
```

In the base case, we're pushing disk 1 from source to destination. But what if the disk we're trying to move isn't disk 1? The base case should be pushing disk `n` from source to destination.

Let's correct the algorithm:

```
function hanoi(n, source, auxiliary, destination, moves = []) {
    if (n === 1) {
        moves.push([n, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}
```

Hmm, but `n` is the size of the problem, not the disk number. In the base case, `n=1` means we're trying to move disk 1. So, the original algorithm is correct.

Let's simulate the algorithm again for n=3 to make sure we understand it:

1. hanoi(3, 0, 1, 2, moves):
   - hanoi(2, 0, 2, 1, moves):
     - hanoi(1, 0, 1, 2, moves):
       - Push [1, 0, 2] to moves (Move disk 1 from peg 0 to peg 2)
     - Push [2, 0, 1] to moves (Move disk 2 from peg 0 to peg 1)
     - hanoi(1, 2, 0, 1, moves):
       - Push [1, 2, 1] to moves (Move disk 1 from peg 2 to peg 1)
   - Push [3, 0, 2] to moves (Move disk 3 from peg 0 to peg 2)
   - hanoi(2, 1, 0, 2, moves):
     - hanoi(1, 1, 2, 0, moves):
       - Push [1, 1, 0] to moves (Move disk 1 from peg 1 to peg 0)
     - Push [2, 1, 2] to moves (Move disk 2 from peg 1 to peg 2)
     - hanoi(1, 0, 1, 2, moves):
       - Push [1, 0, 2] to moves (Move disk 1 from peg 0 to peg 2)

So, the moves for n=3 should be:
1. [1, 0, 2]
2. [2, 0, 1]
3. [1, 2, 1]
4. [3, 0, 2]
5. [1, 1, 0]
6. [2, 1, 2]
7. [1, 0, 2]

This looks correct. Let's try one more, for n=4:

1. hanoi(4, 0, 1, 2, moves):
   - hanoi(3, 0, 2, 1, moves):
     - hanoi(2, 0, 1, 2, moves):
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
       - Push [2, 0, 2] to moves (Move disk 2 from peg 0 to peg 2)
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)
     - Push [3, 0, 1] to moves (Move disk 3 from peg 0 to peg 1)
     - hanoi(2, 2, 0, 1, moves):
       - hanoi(1, 2, 1, 0, moves):
         - Push [1, 2, 0] to moves (Move disk 1 from peg 2 to peg 0)
       - Push [2, 2, 1] to moves (Move disk 2 from peg 2 to peg 1)
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
   - Push [4, 0, 2] to moves (Move disk 4 from peg 0 to peg 2)
   - hanoi(3, 1, 0, 2, moves):
     - hanoi(2, 1, 2, 0, moves):
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)
       - Push [2, 1, 0] to moves (Move disk 2 from peg 1 to peg 0)
       - hanoi(1, 2, 1, 0, moves):
         - Push [1, 2, 0] to moves (Move disk 1 from peg 2 to peg 0)
     - Push [3, 1, 2] to moves (Move disk 3 from peg 1 to peg 2)
     - hanoi(2, 0, 1, 2, moves):
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
       - Push [2, 0, 2] to moves (Move disk 2 from peg 0 to peg 2)
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)

Let's list the moves for n=4:
1. [1, 0, 1]
2. [2, 0, 2]
3. [1, 1, 2]
4. [3, 0, 1]
5. [1, 2, 0]
6. [2, 2, 1]
7. [1, 0, 1]
8. [4, 0, 2]
9. [1, 1, 2]
10. [2, 1, 0]
11. [1, 2, 0]
12. [3, 1, 2]
13. [1, 0, 1]
14. [2, 0, 2]
15. [1, 1, 2]

Great, the algorithm is working correctly. Now, let's generate the complete list of moves for n=12. For brevity, I'll present it in the required format.

I've simulated the algorithm and it's correct. For n=12, we'll have 2^12 - 1 = 4095 moves. Let's format the moves as requested:

For n=12, the moves are:

First, I'll move 11 disks from peg 0 to peg 1 (using peg 2 as auxiliary):
   - This will be the first 2^11 - 1 = 2047 moves.
   - To move 11 disks, I'll first move 10 disks from peg 0 to peg 2 (using peg 1 as auxiliary), then move disk 11 from peg 0 to peg 1, and finally move 10 disks from peg 2 to peg 1 (using peg 0 as auxiliary).
   - This pattern continues recursively.

Then, I'll move disk 12 from peg 0 to peg 2:
   - This is the 2048th move.

Finally, I'll move 11 disks from peg 1 to peg 2 (using peg 0 as auxiliary):
   - This will be the next 2^11 - 1 = 2047 moves.
   - Similar to the first step, this also follows the recursive pattern.

I'll now list all 4095 moves for the Tower of Hanoi with 12 disks. 

Actually, I think I've already established that the algorithm works correctly. Since there are 4095 moves, it would be very lengthy to list them all. Let me just list the first few moves and the last few moves to ensure the algorithm is correct, and then provide the complete list:

First few moves:
1. [1, 0, 1]
2. [2, 0, 2]
3. [1, 1, 2]
4. [3, 0, 1]
5. [1, 2, 0]
6. [2, 2, 1]
7. [1, 0, 1]
8. [4, 0, 2]
9. [1, 1, 2]
10. [2, 1, 0]
... (and so on)

Last few moves:
4086. [1, 1, 2]
4087. [2, 1, 0]
4088. [1, 2, 0]
4089. [3, 1, 2]
4090. [1, 0, 1]
4091. [2, 0, 2]
4092. [1, 1, 2]
4093. [4, 1, 2]
4094. [1, 2, 0]
4095. [2, 2, 1]
4096. [1, 0, 1]

Wait, that's 4096 moves, which is 2^12. But we should have 2^12 - 1 = 4095 moves.

Let me double-check the algorithm:

```
function hanoi(n, source, auxiliary, destination, moves = []) {
    if (n === 1) {
        moves.push([n, source, destination]);
        return;
    }
    
    hanoi(n-1, source, destination, auxiliary, moves);
    moves.push([n, source, destination]);
    hanoi(n-1, auxiliary, source, destination, moves);
}
```

Yes, for n=1, we push 1 move. For n=2, we push 3 moves. For n=3, we push 7 moves. And for n=12, we should push 2^12 - 1 = 4095 moves.

It seems I've simulated the algorithm incorrectly somewhere. Let me carefully trace the algorithm one more time for n=4:

1. hanoi(4, 0, 1, 2, moves):
   - hanoi(3, 0, 2, 1, moves):
     - hanoi(2, 0, 1, 2, moves):
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
       - Push [2, 0, 2] to moves (Move disk 2 from peg 0 to peg 2)
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)
     - Push [3, 0, 1] to moves (Move disk 3 from peg 0 to peg 1)
     - hanoi(2, 2, 0, 1, moves):
       - hanoi(1, 2, 1, 0, moves):
         - Push [1, 2, 0] to moves (Move disk 1 from peg 2 to peg 0)
       - Push [2, 2, 1] to moves (Move disk 2 from peg 2 to peg 1)
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
   - Push [4, 0, 2] to moves (Move disk 4 from peg 0 to peg 2)
   - hanoi(3, 1, 0, 2, moves):
     - hanoi(2, 1, 2, 0, moves):
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)
       - Push [2, 1, 0] to moves (Move disk 2 from peg 1 to peg 0)
       - hanoi(1, 2, 1, 0, moves):
         - Push [1, 2, 0] to moves (Move disk 1 from peg 2 to peg 0)
     - Push [3, 1, 2] to moves (Move disk 3 from peg 1 to peg 2)
     - hanoi(2, 0, 1, 2, moves):
       - hanoi(1, 0, 2, 1, moves):
         - Push [1, 0, 1] to moves (Move disk 1 from peg 0 to peg 1)
       - Push [2, 0, 2] to moves (Move disk 2 from peg 0 to peg 2)
       - hanoi(1, 1, 0, 2, moves):
         - Push [1, 1, 2] to moves (Move disk 1 from peg 1 to peg 2)

So, for n=4, the moves are:
1. [1, 0, 1]
2. [2, 0, 2]
3. [1, 1, 2]
4. [3, 0, 1]
5. [1, 2, 0]
6. [2, 2, 1]
7. [1, 0, 1]
8. [4, 0, 2]
9. [1, 1, 2]
10. [2, 1, 0]
11. [1, 2, 0]
12. [3, 1, 2]
13. [1, 0, 1]
14. [2, 0, 2]
15. [1, 1, 2]

That's 15 moves, which is 2^4 - 1, as expected. The algorithm is indeed correct.

Now, let's provide the complete list of 4095 moves for the Tower of Hanoi with 12 disks. Since this is a lot of moves, let's just format it as requested:

moves=[[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,0,2],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,0,2],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,0,2],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[9,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[8,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[10,0,2],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[8,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[9,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[11,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[8,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[8,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[10,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[9,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[8,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[12,0,2],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[8,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[9,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[11,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[9,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[8,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[10,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[8,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[9,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[7,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[6,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[5,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[6,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,1],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2]]
</think>

moves=[[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[5,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,1,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,1,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[5,2,1],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[7,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,1,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[5,2,1],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[6,2,1],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,2,1],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[10,0,1],[1,2,0],[2,2,1],[1,0,1],[3,2,0],[1,1,2],[2,1,0],[1,2,0],[4,2,1],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[11,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[10,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[12,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[11,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[10,1,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[9,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[8,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,1,2],[1,0,2],[2,0,1],[1,2,1],[3,0,2],[1,1,0],[2,1,2],[1,0,2],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[7,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,1,0],[1,1,2],[2,1,0],[1,2,0],[3,1,2],[1,0,1],[2,0,2],[1,1,2],[5,1,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[4,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[6,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1],[4,2,0],[1,2,1],[2,2,0],[1,1,0],[3,2,1],[1,0,2],[2,0,1],[1,2,1],[5,0,2],[1,1,0],[2,1,2],[1,0,2],[3,1,0],[1,2,1],[2,0,1],[1,1,0],[4,0,2],[1,0,1],[2,0,2],[1,1,2],[3,0,1],[1,2,0],[2,2,1],[1,0,1]]

